---
layout: post
title:  "Eloquent handy!"
date:   2015-10-20 18:08:34
categories: Tutorial
---
In this tutorial I will talk about Eloquent tricks that everyone should know.


<pre>
<code>
	$data=$user->posts;
	is work as
	$data=$user->posts()->get();
</code>
</pre>


Collection Where and Query Builder Where

<pre>
<code>

	$data=$user->posts->where('visited_count',2);
	ဒါက collection object မွာ where သံုးထားတာပါ. သည္ where method ဒီ 
	query builder where method မဟုတ္ေျကာင္းသတိျပုဖို့လိုပ္တယ္. 
	collection object မွာ သံုးလို့ရတဲ့ collection where method တစ္ုချဖစ္ပါတယ္

	$data=$user->posts()->where('visited_count',2)->get();

	ဒါကေတာ့ query builder ရဲ့ where method ကိုသံုးျပီး database ထဲက visited_count '2' နဲ့ ညီတာကို ဆြဲထုတ္ျပသြားတာပါ
    

</code>
</pre>

Different Between collection Where method and Query Builder Where

<pre>
<code>

#Diff1 fetching

	$data=$user->posts->where('visited_count',2);

	collection object ျဖစ္တဲ့အတြက္ တစ္ခါထဲ condition စစ္ျပီး ဆြဲထုတ္လုိ့ရပါတယ္

	_________________________

    $data=$user->posts()->where('visited_count',2)->get();

    query object ျဖစ္တဲ့အတြက္ get() method ကို call ျပီးမွသာ data ကိုဆြဲထုတ္လို့ရမွျဖစ္ပါတယ္


</code>
</pre>

<pre>
<code>

#Diff2 conditions

	$data=$user->posts->where('visited_count','>',2);

	$data=$user->posts->where('visited_count','<',2);

	အထက္ပါ code ၂ ေျကာင္းလုံုး အလုပ္လုပ္မွျမဟုတ္ပါဘူး

	collection object ၇ဲ့ where method သည္ argument1 နဲ့ argument2 တူသာကုိဘဲ စစ္ထုတ္ေပးနိုင္ပါတယ္

	greater than or less than ျပီးေတာ့ like query လိုမ်ိုးသံုးလို့မရပါဘူး

	#Alternative Approach for collection to check greater than or less than or some other condition

	$filtered = $data->filter(function ($item) {
	
		return $item->visited_count > 2;
	
	});

	အထက္ပါ code သည္ visited_count 2 ထက္မ်ားတာကိုေပးပါလိမ့္မယ္
	_________________________


    $data=$user->posts()->where('visited_count','>',2)->get();

    query object ျဖစ္တဲ့အတြက္ အထက္ပါ code ဟာအလုပ္လုပ္ပါတယ္


</code>
</pre>


<pre>
<code>

#Diff3 performance



	$data=$user->posts->where('category_id',2);

	အထက္ပါ code သည္ post အားလံုးကိုဆြဲထုတ္ျပီးမွ ရလာတဲ့ collection object ကို 
	filter ျပန္လုပ္တဲ့ အတြက္ေျကာင့္ ိdata အရမ္းမ်ားတဲ့အခါ performance က်နုိင္ပါတယ္


	_________________________

    $data=$user->posts()->where('category_id',2)->get();

    အထက္ပါ code ကေတာ့ database မွာ condition စစ္တြဲ့အတြက္ ပိုမိုေကာင္းမြန္တဲ့ performance မိ်ုေပးနိုင္ပါတယ္

</code>
</pre>


